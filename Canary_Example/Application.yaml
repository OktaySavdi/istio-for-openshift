kind: Deployment
apiVersion: apps/v1
metadata:
  name: color-green
  labels:
    app: color
    version: safe
    app.kubernetes.io/instance: color
spec:
  replicas: 1
  selector:
    matchLabels:
      app: color
      version: safe
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: color
        version: safe
      annotations:
        sidecar.istio.io/inject: 'true'
    spec:
      containers:
        - name: green
          image: 'quay.io/oktaysavdi/color'
          env:
            - name: COLOR
              value: green
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
--- 
kind: Deployment
apiVersion: apps/v1
metadata:
  name: color-blue
  labels:
    app: color
    version: risky
    app.kubernetes.io/instance: color
spec:
  replicas: 1
  selector:
    matchLabels:
      app: color
      version: risky
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: color
        version: risky
      annotations:
        sidecar.istio.io/inject: 'true'
    spec:
      containers:
        - name: blue
          image: 'quay.io/oktaysavdi/color'
          env:
            - name: COLOR
              value: blue
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: color-svc
  labels:
    app: color
    app.kubernetes.io/instance: color
spec:
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: color
  type: ClusterIP
  sessionAffinity: None
status:
  loadBalancer: {}
